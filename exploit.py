#/usr/bin/python

from pwn import *

binary = "XXX"
host, port = "XXXX", 1234
libc_binary = "XXX"

context.terminal = ['tmux', 'splitw', '-v']

DEBUG = True

if DEBUG:
    context.log_level = "DEBUG"

e = ELF(binary)
# libc = ELF(libc_binary)

context.bits = e.bits

# Ubuntu 16
# set substitute-path /build/glibc-LK5gWL/glibc-2.23/ /usr/src/glibc/glibc-2.23/
# Ubuntu 18
# set substitute-path /build/glibc-B9XfQf/glibc-2.28/ /usr/src/glibc/glibc-2.28/
# Ubuntu 19
# set substitute-path /build/glibc-KRRWSm/glibc-2.29/ /usr/src/glibc/glibc-2.29/

gdbscript = """
c
"""

def getpipe():
    if DEBUG:
        p = process(binary)
        gdb.attach(p.pid, gdbscript=gdbscript)
        return p
    return remote(host, port)

def getlibc():
    if DEBUG:
        if context.bits == 32:
            return ELF("/lib/i386-linux-gnu/libc.so.6")
        else:
            return ELF("/lib/x86_64-linux-gnu/libc.so.6")
    return ELF(libc_binary)

p = getpipe()
